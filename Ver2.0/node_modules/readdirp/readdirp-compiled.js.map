{"version":3,"sources":["readdirp.js"],"names":[],"mappings":"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","file":"readdirp-compiled.js","sourcesContent":["'use strict';\n\nvar fs        =  require('graceful-fs')\n  , path      =  require('path')\n  , minimatch =  require('minimatch')\n  , toString  =  Object.prototype.toString\n  , si        =  require('set-immediate-shim')\n  ;\n\n\n// Standard helpers\nfunction isFunction (obj) {\n  return toString.call(obj) === '[object Function]';\n}\n\nfunction isString (obj) {\n  return toString.call(obj) === '[object String]';\n}\n\nfunction isRegExp (obj) {\n  return toString.call(obj) === '[object RegExp]';\n}\n\nfunction isUndefined (obj) {\n  return obj === void 0;\n}\n\n/** \n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param { Object }   opts     Options to specify root (start directory), filters and recursion depth\n * @param { function } callback1  When callback2 is given calls back for each processed file - function (fileInfo) { ... },\n *                                when callback2 is not given, it behaves like explained in callback2\n * @param { function } callback2  Calls back once all files have been processed with an array of errors and file infos\n *                                function (err, fileInfos) { ... }\n */\nfunction readdir(opts, callback1, callback2) {\n  var stream\n    , handleError\n    , handleFatalError\n    , pending = 0\n    , errors = []\n    , readdirResult = {\n        directories: []\n      , files: []\n    }\n    , fileProcessed\n    , allProcessed\n    , realRoot\n    , aborted = false\n    , paused = false\n    ;\n\n  // If no callbacks were given we will use a streaming interface\n  if (isUndefined(callback1)) {\n    var api          =  require('./stream-api')();\n    stream           =  api.stream;\n    callback1        =  api.processEntry;\n    callback2        =  api.done;\n    handleError      =  api.handleError;\n    handleFatalError =  api.handleFatalError;\n\n    stream.on('close', function () { aborted = true; });\n    stream.on('pause', function () { paused = true; });\n    stream.on('resume', function () { paused = false; });\n  } else {\n    handleError      =  function (err) { errors.push(err); };\n    handleFatalError =  function (err) {\n      handleError(err);\n      allProcessed(errors, null);\n    };\n  }\n\n  if (isUndefined(opts)){\n    handleFatalError(new Error (\n      'Need to pass at least one argument: opts! \\n' +\n      'https://github.com/thlorenz/readdirp#options'\n      )\n    );\n    return stream;\n  }\n\n  opts.root            =  opts.root            || '.';\n  opts.fileFilter      =  opts.fileFilter      || function() { return true; };\n  opts.directoryFilter =  opts.directoryFilter || function() { return true; };\n  opts.depth           =  typeof opts.depth === 'undefined' ? 999999999 : opts.depth;\n  opts.entryType       =  opts.entryType       || 'files';\n\n  var statfn = opts.lstat === true ? fs.lstat.bind(fs) : fs.stat.bind(fs);\n\n  if (isUndefined(callback2)) {\n    fileProcessed = function() { };\n    allProcessed = callback1;\n  } else {\n    fileProcessed = callback1;\n    allProcessed = callback2;\n  }\n\n  function normalizeFilter (filter) {\n\n    if (isUndefined(filter)) return undefined;\n\n    function isNegated (filters) {\n\n      function negated(f) { \n        return f.indexOf('!') === 0; \n      }\n\n      var some = filters.some(negated);\n      if (!some) {\n        return false;\n      } else {\n        if (filters.every(negated)) {\n          return true;\n        } else {\n          // if we detect illegal filters, bail out immediately\n          throw new Error(\n            'Cannot mix negated with non negated glob filters: ' + filters + '\\n' +\n            'https://github.com/thlorenz/readdirp#filters'\n          );\n        }\n      }\n    }\n\n    // Turn all filters into a function\n    if (isFunction(filter)) {\n\n      return filter;\n\n    } else if (isString(filter)) {\n\n      return function (entryInfo) {\n        return minimatch(entryInfo.name, filter.trim());\n      };\n\n    } else if (filter && Array.isArray(filter)) {\n\n      if (filter) filter = filter.map(function (f) {\n        return f.trim();\n      });\n\n      return isNegated(filter) ?\n        // use AND to concat multiple negated filters\n        function (entryInfo) {\n          return filter.every(function (f) {\n            return minimatch(entryInfo.name, f);\n          });\n        }\n        :\n        // use OR to concat multiple inclusive filters\n        function (entryInfo) {\n          return filter.some(function (f) {\n            return minimatch(entryInfo.name, f);\n          });\n        };\n    }\n  }\n\n  function processDir(currentDir, entries, callProcessed) {\n    if (aborted) return;\n    var total = entries.length\n      , processed = 0\n      , entryInfos = []\n      ;\n\n    fs.realpath(currentDir, function(err, realCurrentDir) {\n      if (aborted) return;\n      if (err) {\n        handleError(err);\n        callProcessed(entryInfos);\n        return;\n      }\n\n      var relDir = path.relative(realRoot, realCurrentDir);\n\n      if (entries.length === 0) {\n        callProcessed([]);\n      } else {\n        entries.forEach(function (entry) { \n\n          var fullPath = path.join(realCurrentDir, entry)\n            , relPath  = path.join(relDir, entry);\n\n          statfn(fullPath, function (err, stat) {\n            if (err) {\n              handleError(err);\n            } else {\n              entryInfos.push({\n                  name          :  entry\n                , path          :  relPath   // relative to root\n                , fullPath      :  fullPath\n\n                , parentDir     :  relDir    // relative to root\n                , fullParentDir :  realCurrentDir\n\n                , stat          :  stat\n              });\n            }\n            processed++;\n            if (processed === total) callProcessed(entryInfos);\n          });\n        });\n      }\n    });\n  }\n\n  function readdirRec(currentDir, depth, callCurrentDirProcessed) {\n    var args = arguments;\n    if (aborted) return;\n    if (paused) {\n      si(function () {\n        readdirRec.apply(null, args);\n      })\n      return;\n    } \n\n    fs.readdir(currentDir, function (err, entries) {\n      if (err) {\n        handleError(err);\n        callCurrentDirProcessed();\n        return;\n      }\n\n      processDir(currentDir, entries, function(entryInfos) {\n\n        var subdirs = entryInfos\n          .filter(function (ei) { return ei.stat.isDirectory() && opts.directoryFilter(ei); });\n\n        subdirs.forEach(function (di) {\n          if(opts.entryType === 'directories' || opts.entryType === 'both' || opts.entryType === 'all') {\n            fileProcessed(di);\n          }\n          readdirResult.directories.push(di); \n        });\n\n        entryInfos\n          .filter(function(ei) {\n            var isCorrectType = opts.entryType === 'all' ?\n              !ei.stat.isDirectory() : ei.stat.isFile() || ei.stat.isSymbolicLink();\n            return isCorrectType && opts.fileFilter(ei);\n          })\n          .forEach(function (fi) {\n            if(opts.entryType === 'files' || opts.entryType === 'both' || opts.entryType === 'all') {\n              fileProcessed(fi);\n            }\n            readdirResult.files.push(fi); \n          });\n\n        var pendingSubdirs = subdirs.length;\n\n        // Be done if no more subfolders exist or we reached the maximum desired depth\n        if(pendingSubdirs === 0 || depth === opts.depth) {\n          callCurrentDirProcessed();\n        } else {\n          // recurse into subdirs, keeping track of which ones are done \n          // and call back once all are processed\n          subdirs.forEach(function (subdir) {\n            readdirRec(subdir.fullPath, depth + 1, function () {\n              pendingSubdirs = pendingSubdirs - 1;\n              if(pendingSubdirs === 0) { \n                callCurrentDirProcessed();\n              }\n            });\n          });\n        }\n      });\n    });\n  }\n\n  // Validate and normalize filters\n  try {\n    opts.fileFilter = normalizeFilter(opts.fileFilter);\n    opts.directoryFilter = normalizeFilter(opts.directoryFilter);\n  } catch (err) {\n    // if we detect illegal filters, bail out immediately\n    handleFatalError(err);\n    return stream;\n  }\n\n  // If filters were valid get on with the show\n  fs.realpath(opts.root, function(err, res) {\n    if (err) {\n      handleFatalError(err);\n      return stream;\n    }\n\n    realRoot = res;\n    readdirRec(opts.root, 0, function () { \n      // All errors are collected into the errors array\n      if (errors.length > 0) {\n        allProcessed(errors, readdirResult); \n      } else {\n        allProcessed(null, readdirResult);\n      }\n    });\n  });\n\n  return stream;\n}\n\nmodule.exports = readdir;\n"]}