{"version":3,"sources":["readdirp.js"],"names":[],"mappings":"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","file":"readdirp-compiled.js","sourcesContent":["/*jshint asi:true */\n\nvar test     = require('tap').test\n  , path     = require('path')\n  , fs       = require('fs')\n  , util     = require('util')\n  , net      = require('net')\n  , readdirp = require('../readdirp.js')\n  , root     = path.join(__dirname, '../test/bed')\n  , totalDirs          =  6\n  , totalFiles         =  12\n  , ext1Files          =  4\n  , ext2Files          =  3\n  , ext3Files          =  2\n  , rootDir2Files      =  2\n  , nameHasLength9Dirs =  2\n  , depth1Files        =  8\n  , depth0Files        =  3\n  ;\n\n/*\nStructure of test bed:\n    .\n    ├── root_dir1\n    │   ├── root_dir1_file1.ext1\n    │   ├── root_dir1_file2.ext2\n    │   ├── root_dir1_file3.ext3\n    │   ├── root_dir1_subdir1\n    │   │   └── root1_dir1_subdir1_file1.ext1\n    │   └── root_dir1_subdir2\n    │       └── .gitignore\n    ├── root_dir2\n    │   ├── root_dir2_file1.ext1\n    │   ├── root_dir2_file2.ext2\n    │   ├── root_dir2_subdir1\n    │   │   └── .gitignore\n    │   └── root_dir2_subdir2\n    │       └── .gitignore\n    ├── root_file1.ext1\n    ├── root_file2.ext2\n    └── root_file3.ext3\n\n    6 directories, 13 files\n*/\n\n// console.log('\\033[2J'); // clear console\n\nfunction opts (extend) {\n  var o = { root: root };\n\n  if (extend) {\n    for (var prop in extend) {\n      o[prop] = extend[prop];\n    }\n  }\n  return o;\n}\n\ntest('\\nreading root without filter', function (t) {\n  t.plan(2);\n  readdirp(opts(), function (err, res) {\n    t.equals(res.directories.length, totalDirs, 'all directories');\n    t.equals(res.files.length, totalFiles, 'all files');\n    t.end();\n  })\n})\n\ntest('\\nreading root without filter using lstat', function (t) {\n  t.plan(2);\n  readdirp(opts({ lstat: true }), function (err, res) {\n    t.equals(res.directories.length, totalDirs, 'all directories');\n    t.equals(res.files.length, totalFiles, 'all files');\n    t.end();\n  })\n})\n\ntest('\\nreading root with symlinks using lstat', function (t) {\n  t.plan(2);\n  fs.symlinkSync(path.join(root, 'root_dir1'), path.join(root, 'dirlink'));\n  fs.symlinkSync(path.join(root, 'root_file1.ext1'), path.join(root, 'link.ext1'));\n  readdirp(opts({ lstat: true }), function (err, res) {\n    t.equals(res.directories.length, totalDirs, 'all directories');\n    t.equals(res.files.length, totalFiles + 2, 'all files + symlinks');\n    fs.unlinkSync(path.join(root, 'dirlink'));\n    fs.unlinkSync(path.join(root, 'link.ext1'));\n    t.end();\n  })\n})\n\ntest('\\nreading non-standard fds', function (t) {\n  t.plan(2);\n  var server = net.createServer().listen(path.join(root, 'test.sock'), function(){\n    readdirp(opts({ entryType: 'all' }), function (err, res) {\n      t.equals(res.files.length, totalFiles + 1, 'all files + socket');\n      readdirp(opts({ entryType: 'both' }), function (err, res) {\n        t.equals(res.files.length, totalFiles, 'all regular files only');\n        server.close();\n        t.end();\n      })\n    })\n  });\n})\n\ntest('\\nreading root using glob filter', function (t) {\n  // normal\n  t.test('\\n# \"*.ext1\"', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: '*.ext1' } ), function (err, res) {\n      t.equals(res.files.length, ext1Files, 'all ext1 files');\n      t.end();\n    })\n  })\n  t.test('\\n# [\"*.ext1\", \"*.ext3\"]', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: [ '*.ext1', '*.ext3' ] } ), function (err, res) {\n      t.equals(res.files.length, ext1Files + ext3Files, 'all ext1 and ext3 files');\n      t.end();\n    })\n  })\n  t.test('\\n# \"root_dir1\"', function (t) {\n    t.plan(1);\n    readdirp(opts( { directoryFilter: 'root_dir1' }), function (err, res) {\n      t.equals(res.directories.length, 1, 'one directory');\n      t.end();\n    })\n  })\n  t.test('\\n# [\"root_dir1\", \"*dir1_subdir1\"]', function (t) {\n    t.plan(1);\n    readdirp(opts( { directoryFilter: [ 'root_dir1', '*dir1_subdir1' ]}), function (err, res) {\n      t.equals(res.directories.length, 2, 'two directories');\n      t.end();\n    })\n  })\n\n  t.test('\\n# negated: \"!*.ext1\"', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: '!*.ext1' } ), function (err, res) {\n      t.equals(res.files.length, totalFiles - ext1Files, 'all but ext1 files');\n      t.end();\n    })\n  })\n  t.test('\\n# negated: [\"!*.ext1\", \"!*.ext3\"]', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: [ '!*.ext1', '!*.ext3' ] } ), function (err, res) {\n      t.equals(res.files.length, totalFiles - ext1Files - ext3Files, 'all but ext1 and ext3 files');\n      t.end();\n    })\n  })\n\n  t.test('\\n# mixed: [\"*.ext1\", \"!*.ext3\"]', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: [ '*.ext1', '!*.ext3' ] } ), function (err, res) {\n      t.similar(err[0].toString(), /Cannot mix negated with non negated glob filters/, 'returns meaningfull error');\n      t.end();\n    })\n  })\n\n  t.test('\\n# leading and trailing spaces: [\" *.ext1\", \"*.ext3 \"]', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: [ ' *.ext1', '*.ext3 ' ] } ), function (err, res) {\n      t.equals(res.files.length, ext1Files + ext3Files, 'all ext1 and ext3 files');\n      t.end();\n    })\n  })\n  t.test('\\n# leading and trailing spaces: [\" !*.ext1\", \" !*.ext3 \"]', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: [ ' !*.ext1', ' !*.ext3' ] } ), function (err, res) {\n      t.equals(res.files.length, totalFiles - ext1Files - ext3Files, 'all but ext1 and ext3 files');\n      t.end();\n    })\n  })\n\n  t.test('\\n# ** glob pattern', function (t) {\n    t.plan(1);\n    readdirp(opts( { fileFilter: '**/*.ext1' } ), function (err, res) {\n      t.equals(res.files.length, ext1Files, 'ignores ** in **/*.ext1 -> only *.ext1 files');\n      t.end();\n    })\n  })\n})\n\ntest('\\n\\nreading root using function filter', function (t) {\n  t.test('\\n# file filter -> \"contains root_dir2\"', function (t) {\n    t.plan(1);\n    readdirp(\n        opts( { fileFilter: function (fi) { return fi.name.indexOf('root_dir2') >= 0; } })\n      , function (err, res) {\n          t.equals(res.files.length, rootDir2Files, 'all rootDir2Files');\n          t.end();\n      }\n    )\n  })\n\n  t.test('\\n# directory filter -> \"name has length 9\"', function (t) {\n    t.plan(1);\n    readdirp(\n        opts( { directoryFilter: function (di) { return di.name.length === 9; } })\n      , function (err, res) {\n          t.equals(res.directories.length, nameHasLength9Dirs, 'all all dirs with name length 9');\n          t.end();\n      }\n    )\n  })\n})\n\ntest('\\nreading root specifying maximum depth', function (t) {\n  t.test('\\n# depth 1', function (t) {\n    t.plan(1);\n      readdirp(opts( { depth: 1 } ), function (err, res) {\n        t.equals(res.files.length, depth1Files, 'does not return files at depth 2');\n      })\n  })\n})\n\ntest('\\nreading root with no recursion', function (t) {\n  t.test('\\n# depth 0', function (t) {\n    t.plan(1);\n      readdirp(opts( { depth: 0 } ), function (err, res) {\n        t.equals(res.files.length, depth0Files, 'does not return files at depth 0');\n      })\n  })\n})\n\ntest('\\nprogress callbacks', function (t) {\n  t.plan(2);\n\n  var pluckName = function(fi) { return fi.name; }\n    , processedFiles = [];\n\n  readdirp(\n      opts()\n    , function(fi) {\n        processedFiles.push(fi);\n      }\n    , function (err, res) {\n        t.equals(processedFiles.length, res.files.length, 'calls back for each file processed');\n        t.deepEquals(processedFiles.map(pluckName).sort(),res.files.map(pluckName).sort(), 'same file names');\n        t.end();\n      }\n  )\n})\n\ntest('resolving of name, full and relative paths', function (t) {\n  var expected = {\n        name          :  'root_dir1_file1.ext1'\n      , parentDirName :  'root_dir1'\n      , path          :  'root_dir1/root_dir1_file1.ext1'\n      , fullPath      :  'test/bed/root_dir1/root_dir1_file1.ext1'\n      }\n    , opts = [\n        { root: './bed'          ,  prefix: ''     }\n      , { root: './bed/'         ,  prefix: ''     }\n      , { root: 'bed'            ,  prefix: ''     }\n      , { root: 'bed/'           ,  prefix: ''     }\n      , { root: '../test/bed/'   ,  prefix: ''     }\n      , { root: '.'              ,  prefix: 'bed'  }\n    ]\n  t.plan(opts.length);\n\n  opts.forEach(function (op) {\n    op.fileFilter = 'root_dir1_file1.ext1';\n\n    t.test('\\n' + util.inspect(op), function (t) {\n      t.plan(4);\n\n      readdirp (op, function(err, res) {\n        t.equals(res.files[0].name, expected.name, 'correct name');\n        t.equals(res.files[0].path, path.join(op.prefix, expected.path), 'correct path');\n      })\n\n      fs.realpath(op.root, function(err, fullRoot) {\n        readdirp (op, function(err, res) {\n          t.equals(\n              res.files[0].fullParentDir\n            , path.join(fullRoot, op.prefix, expected.parentDirName)\n            , 'correct parentDir'\n          );\n          t.equals(\n              res.files[0].fullPath\n            , path.join(fullRoot, op.prefix, expected.parentDirName, expected.name)\n            , 'correct fullPath'\n          );\n        })\n      })\n    })\n  })\n})\n\n\n"]}