{"version":3,"sources":["readdirp-stream.js"],"names":[],"mappings":"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","file":"readdirp-stream-compiled.js","sourcesContent":["/*jshint asi:true */\n\nvar debug           //= true;\nvar test            = debug  ? function () {} : require('tap').test\nvar test_           = !debug ? function () {} : require('tap').test\n  , path            = require('path')\n  , fs              = require('fs')\n  , util            = require('util')\n  , TransformStream = require('readable-stream').Transform\n  , through         = require('through2')\n  , proxyquire      = require('proxyquire')\n  , streamapi       = require('../stream-api')\n  , readdirp        = require('..')\n  , root            = path.join(__dirname, 'bed')\n  , totalDirs       = 6\n  , totalFiles      = 12\n  , ext1Files       = 4\n  , ext2Files       = 3\n  , ext3Files       = 2\n  ;\n  \n// see test/readdirp.js for test bed layout\n\nfunction opts (extend) {\n  var o = { root: root };\n\n  if (extend) {\n    for (var prop in extend) {\n      o[prop] = extend[prop];\n    }\n  }\n  return o;\n}\n\nfunction capture () {\n  var result = { entries: [], errors: [], ended: false }\n    , dst = new TransformStream({ objectMode: true });\n\n  dst._transform = function (entry, _, cb) {\n    result.entries.push(entry);\n    cb();\n  }\n\n  dst._flush = function (cb) {\n    result.ended = true;\n    this.push(result); \n    cb();\n  }\n\n  return dst;\n}\n\ntest('\\nintegrated', function (t) {\n  t.test('\\n# reading root without filter', function (t) {\n    t.plan(2);\n\n    readdirp(opts())\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) { \n          t.equals(result.entries.length, totalFiles, 'emits all files');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ));\n  })\n\n  t.test('\\n# normal: [\"*.ext1\", \"*.ext3\"]', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { fileFilter: [ '*.ext1', '*.ext3' ] } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) { \n          t.equals(result.entries.length, ext1Files + ext3Files, 'all ext1 and ext3 files');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ))\n  })\n\n  t.test('\\n# files only', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { entryType: 'files' } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) { \n          t.equals(result.entries.length, totalFiles, 'returned files');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ))\n  })\n\n  t.test('\\n# directories only', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { entryType: 'directories' } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) { \n          t.equals(result.entries.length, totalDirs, 'returned directories');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ))\n  })\n\n  t.test('\\n# both directories + files', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { entryType: 'both' } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) { \n          t.equals(result.entries.length, totalDirs + totalFiles, 'returned everything');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ))\n  })\n\n  t.test('\\n# directory filter with directories only', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { entryType: 'directories', directoryFilter: [ 'root_dir1', '*dir1_subdir1' ] } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) {\n          t.equals(result.entries.length, 2, 'two directories');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ))\n  })\n\n  t.test('\\n# directory and file filters with both entries', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { entryType: 'both', directoryFilter: [ 'root_dir1', '*dir1_subdir1' ], fileFilter: [ '!*.ext1' ] } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) {\n          t.equals(result.entries.length, 6, '2 directories and 4 files');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n          cb();\n        }\n      ))\n  })\n\n  t.test('\\n# negated: [\"!*.ext1\", \"!*.ext3\"]', function (t) {\n    t.plan(2);\n\n    readdirp(opts( { fileFilter: [ '!*.ext1', '!*.ext3' ] } ))\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .pipe(capture())\n      .pipe(through.obj(\n        function (result, _ , cb) { \n          t.equals(result.entries.length, totalFiles - ext1Files - ext3Files, 'all but ext1 and ext3 files');\n          t.ok(result.ended, 'ends stream');\n          t.end();\n        }\n      ))\n  })\n\n  t.test('\\n# no options given', function (t) {\n    t.plan(1);\n    readdirp()\n      .on('error', function (err) {\n        t.similar(err.toString() , /Need to pass at least one argument/ , 'emits meaningful error');\n        t.end();\n      })\n  })\n\n  t.test('\\n# mixed: [\"*.ext1\", \"!*.ext3\"]', function (t) {\n    t.plan(1);\n\n    readdirp(opts( { fileFilter: [ '*.ext1', '!*.ext3' ] } ))\n      .on('error', function (err) {\n        t.similar(err.toString() , /Cannot mix negated with non negated glob filters/ , 'emits meaningful error');\n        t.end();\n      })\n  })\n})\n\n\ntest('\\napi separately', function (t) {\n\n  t.test('\\n# handleError', function (t) {\n    t.plan(1);\n\n    var api = streamapi()\n      , warning = new Error('some file caused problems');\n\n    api.stream\n      .on('warn', function (err) {\n        t.equals(err, warning, 'warns with the handled error');\n      })\n    api.handleError(warning);\n  })\n\n  t.test('\\n# when stream is paused and then resumed', function (t) {\n    t.plan(6);\n    var api = streamapi()\n      , resumed = false\n      , fatalError = new Error('fatal!')\n      , nonfatalError = new Error('nonfatal!')\n      , processedData = 'some data'\n      ;\n\n    api.stream\n      .on('warn', function (err) {\n        t.equals(err, nonfatalError, 'emits the buffered warning');\n        t.ok(resumed, 'emits warning only after it was resumed');\n      })\n      .on('error', function (err) {\n        t.equals(err, fatalError, 'emits the buffered fatal error');\n        t.ok(resumed, 'emits errors only after it was resumed');\n      })\n      .on('data', function (data) {\n        t.equals(data, processedData, 'emits the buffered data');\n        t.ok(resumed, 'emits data only after it was resumed');\n      })\n      .pause()\n    \n    api.processEntry(processedData);\n    api.handleError(nonfatalError);\n    api.handleFatalError(fatalError);\n  \n    setTimeout(function () {\n      resumed = true;\n      api.stream.resume();\n    }, 1)\n  })\n\n  t.test('\\n# when a stream is paused it stops walking the fs', function (t) {\n    var resumed = false,\n      mockedAPI = streamapi();\n\n    mockedAPI.processEntry = function (entry) {\n      if (!resumed) t.notOk(true, 'should not emit while paused')\n      t.ok(entry, 'emitted while resumed')\n    }.bind(mockedAPI.stream)\n\n    function wrapper () {\n      return mockedAPI\n    }\n\n    var readdirp = proxyquire('../readdirp', {'./stream-api': wrapper})\n      , stream = readdirp(opts())\n      .on('error', function (err) {\n        t.fail('should not throw error', err);\n      })\n      .on('end', function () {\n        t.end()\n      })\n      .pause();\n\n    setTimeout(function () {\n      resumed = true;\n      stream.resume();\n    }, 5)\n  })\n\n  t.test('\\n# when a stream is destroyed, it emits \"closed\", but no longer emits \"data\", \"warn\" and \"error\"', function (t) {\n    var api = streamapi()\n      , fatalError = new Error('fatal!')\n      , nonfatalError = new Error('nonfatal!')\n      , processedData = 'some data'\n      , plan = 0;\n\n    t.plan(6)\n    var stream = api.stream\n      .on('warn', function (err) {\n        t.ok(!stream._destroyed, 'emits warning until destroyed');\n      })\n      .on('error', function (err) {\n        t.ok(!stream._destroyed, 'emits errors until destroyed');\n      })\n      .on('data', function (data) {\n        t.ok(!stream._destroyed, 'emits data until destroyed');\n      })\n      .on('close', function () {\n        t.ok(stream._destroyed, 'emits close when stream is destroyed');\n      })\n    \n\n    api.processEntry(processedData);\n    api.handleError(nonfatalError);\n    api.handleFatalError(fatalError);\n\n    setTimeout(function () {\n      stream.destroy()\n\n      t.notOk(stream.readable, 'stream is no longer readable after it is destroyed')\n\n      api.processEntry(processedData);\n      api.handleError(nonfatalError);\n      api.handleFatalError(fatalError);\n\n      process.nextTick(function () {\n        t.pass('emits no more data, warn or error events after it was destroyed')  \n        t.end();\n      })\n    }, 10)\n  })\n})\n"]}